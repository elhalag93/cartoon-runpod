{
  "name": "Cartoon Animation Worker - Multi-Character Support v5.0",
  "description": "Generate MULTI-CHARACTER 1024x1024 cartoon animations with both Temo and Felfel characters - ULTIMATE QUALITY v5.0 with Perfect Multi-Character Support and 1024x1024 Ultra HD",
  "version": "5.0.0",
  "category": "AI/ML",
  "tags": [
    "animation",
    "cartoon",
    "tts",
    "text-to-speech",
    "animatediff",
    "sdxl",
    "lora",
    "character-animation"
  ],
  "author": "Cartoon Animation Team",
  "license": "Apache-2.0",
  "repository": "https://github.com/elhalag93/cartoon-runpod",
  "documentation": "https://github.com/elhalag93/cartoon-runpod/blob/main/README.md",
  "readme": "Generate high-quality cartoon character animations with synchronized voice using AI. Supports custom characters (Temo, Felfel) with LoRA weights, AnimateDiff for smooth animations, and Dia TTS for realistic speech generation.",
  "runtime": {
    "python_version": "3.10",
    "cuda_version": "12.1",
    "pytorch_version": "2.1.0"
  },
  "resources": {
    "gpu_types": [
      "A100",
      "H100", 
      "RTX A6000"
    ],
    "gpu_count": 1,
    "cpu_count": 16,
    "memory_gb": 128,
    "disk_gb": 200
  },
  "endpoints": [
    {
      "name": "generate",
      "description": "Generate cartoon animations with optional TTS",
      "input_schema": {
        "type": "object",
        "properties": {
          "task_type": {
            "type": "string",
            "enum": ["animation", "tts", "combined"],
            "default": "animation",
            "description": "Type of generation to perform"
          },
          "character": {
            "type": "string",
            "enum": ["temo", "felfel"],
            "description": "Character to animate"
          },
          "prompt": {
            "type": "string",
            "description": "Text prompt describing the animation"
          },
          "dialogue_text": {
            "type": "string",
            "description": "Text for TTS generation with [S1] and [S2] speaker tags"
          },
          "num_frames": {
            "type": "integer",
            "minimum": 16,
            "maximum": 64,
            "default": 32,
            "description": "Number of animation frames (ultra high quality)"
          },
          "fps": {
            "type": "integer",
            "minimum": 12,
            "maximum": 24,
            "default": 16,
            "description": "Frames per second (ultra high quality)"
          },
          "width": {
            "type": "integer",
            "minimum": 768,
            "maximum": 1536,
            "default": 1024,
            "description": "Output width in pixels (ultra high quality 1024x1024)"
          },
          "height": {
            "type": "integer",
            "minimum": 768,
            "maximum": 1536,
            "default": 1024,
            "description": "Output height in pixels (ultra high quality 1024x1024)"
          },
          "guidance_scale": {
            "type": "number",
            "minimum": 8.0,
            "maximum": 25.0,
            "default": 12.0,
            "description": "Guidance scale for animation (ultra high quality)"
          },
          "tts_guidance_scale": {
            "type": "number",
            "minimum": 2.0,
            "maximum": 10.0,
            "default": 5.0,
            "description": "Guidance scale for TTS generation (ultra high quality)"
          },
          "temperature": {
            "type": "number",
            "minimum": 0.8,
            "maximum": 2.0,
            "default": 1.4,
            "description": "Temperature for TTS sampling (ultra high quality)"
          },
          "max_new_tokens": {
            "type": "integer",
            "minimum": 2048,
            "maximum": 8192,
            "default": 4096,
            "description": "Maximum tokens for TTS generation (ultra high quality)"
          },
          "num_inference_steps": {
            "type": "integer",
            "minimum": 30,
            "maximum": 75,
            "default": 50,
            "description": "Number of inference steps (ultra high quality)"
          },
          "seed": {
            "type": "integer",
            "description": "Random seed for reproducibility"
          }
        },
        "required": []
      },
      "output_schema": {
        "type": "object",
        "properties": {
          "task_type": {
            "type": "string",
            "description": "Type of generation performed"
          },
          "gif": {
            "type": "string",
            "description": "Base64-encoded GIF animation"
          },
          "mp4": {
            "type": "string",
            "description": "Base64-encoded MP4 video"
          },
          "audio": {
            "type": "string",
            "description": "Base64-encoded audio file"
          },
          "seed": {
            "type": "integer",
            "description": "Seed used for generation"
          },
          "memory_usage": {
            "type": "object",
            "description": "GPU memory usage statistics"
          }
        }
      }
    }
  ],
  "examples": [
    {
      "name": "Temo Animation",
      "description": "Generate Temo character walking on moon",
      "input": {
        "task_type": "animation",
        "character": "temo",
        "prompt": "temo character walking on moon surface, detailed cartoon style",
        "num_frames": 16,
        "seed": 42
      }
    },
    {
      "name": "Combined Animation + TTS",
      "description": "Generate animation with synchronized speech",
      "input": {
        "task_type": "combined",
        "character": "felfel",
        "prompt": "felfel character waving hello",
        "dialogue_text": "[S1] Hello everyone! [S2] Nice to meet you!",
        "num_frames": 16,
        "seed": 84
      }
    }
  ],
  "handler": {
    "file": "handler.py",
    "function": "generate_cartoon"
  }
} 